{"ast":null,"code":"import _slicedToArray from \"/home/giang/FullStackCourse/part2/countries/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/giang/FullStackCourse/part2/countries/src/components/Country.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Language from \"./Language\";\n\nconst Country = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        showDetails = _useState2[0],\n        setShowDetails = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        weather = _useState4[0],\n        setWeather = _useState4[1];\n\n  useEffect(() => {\n    let isMounted = false;\n    axios.get(\"http://api.weatherstack.com/current?access_key=335188ef8b3e043ba8a1669584216372&query=\".concat(props.country.capital)).then(response => {\n      if (isMounted) {\n        setWeather(response.data);\n      }\n    });\n    return () => {\n      isMounted = true;\n    };\n  }, [props.country.capital]);\n\n  const buttonShow = () => {\n    setShowDetails(!showDetails);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.country.name, React.createElement(\"button\", {\n    onClick: () => buttonShow(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"show\")), showDetails ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, props.country.name), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"capital \", props.country.capital), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"population \", props.country.population), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"languages\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, props.country.languages && props.country.languages.map((language, index) => React.createElement(Language, {\n    key: index,\n    language: language,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: props.country.flag,\n    alt: \"Flag\",\n    width: \"10%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Weather in \", props.country.capital), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"temparature: \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, weather.current.temperature, \" Celsius\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: weather.current.temperature,\n    alt: \"Pic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"wind: \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, weather.current.wind_speed, \" kph \"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"direction \", weather.current.wind_dir)) : null);\n};\n\nexport default Country;","map":{"version":3,"sources":["/home/giang/FullStackCourse/part2/countries/src/components/Country.js"],"names":["React","useState","useEffect","axios","Language","Country","props","showDetails","setShowDetails","weather","setWeather","isMounted","get","country","capital","then","response","data","buttonShow","name","population","languages","map","language","index","flag","current","temperature","wind_speed","wind_dir"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport axios from \"axios\"\nimport Language from \"./Language\"\n\nconst Country = (props) => {\n    const [ showDetails, setShowDetails ] = useState(false)\n    const [ weather, setWeather ] = useState({})\n\n    useEffect(() => {\n        let isMounted = false\n        axios\n        .get(`http://api.weatherstack.com/current?access_key=335188ef8b3e043ba8a1669584216372&query=${props.country.capital}`)\n        .then((response => {\n            if(isMounted) {\n            setWeather(response.data)}\n        }))\n        return () => {isMounted=true}\n    }, [props.country.capital])\n\n    const buttonShow = () => {\n        setShowDetails(!showDetails)\n    }\n\n    return(\n        <div>\n            <li>\n                {props.country.name} \n                <button onClick={()=>buttonShow()}>show</button>\n            </li>\n            {showDetails ? \n                <div>\n                    <h1>{props.country.name}</h1>\n                    <span>capital {props.country.capital}</span><br />\n                    <span>population {props.country.population}</span>\n                    <h3>languages</h3> \n                        <ul>\n                            {props.country.languages && props.country.languages.map((language,index) =>\n                                <Language \n                                    key={index}\n                                    language={language}\n                                />\n                            )}\n                        </ul>\n                    <br />\n                    <img src={props.country.flag} alt=\"Flag\" width=\"10%\" />\n                    <h2>Weather in {props.country.capital}</h2>\n                    <strong>temparature: </strong>\n                        <span>{weather.current.temperature} Celsius</span><br />\n                    <img src={weather.current.temperature} alt=\"Pic\"/><br />\n                    <strong>wind: </strong>\n                        <span>{weather.current.wind_speed} kph </span>\n                            <span>direction {weather.current.wind_dir}</span>\n                </div>\n                : null\n            }\n        </div>\n       \n    )\n}\n\nexport default Country"]},"metadata":{},"sourceType":"module"}
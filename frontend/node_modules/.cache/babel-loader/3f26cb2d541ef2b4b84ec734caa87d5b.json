{"ast":null,"code":"import _objectSpread from \"/home/giang/phonebook-app/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/giang/phonebook-app/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/giang/phonebook-app/frontend/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport personService from \"./service/persons\";\nimport Success from \"./components/Success\";\nimport Error from \"./components/Error\";\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        persons = _useState2[0],\n        setPersons = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newName = _useState4[0],\n        setNewName = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        newNumber = _useState6[0],\n        setNumber = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        filter = _useState8[0],\n        setFilter = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        success = _useState10[0],\n        setSuccess = _useState10[1];\n\n  const _useState11 = useState(null),\n        _useState12 = _slicedToArray(_useState11, 2),\n        error = _useState12[0],\n        setError = _useState12[1];\n\n  useEffect(() => {\n    personService.getAll().then(response => {\n      setPersons(response.data);\n    });\n  }, []);\n\n  const addPerson = event => {\n    event.preventDefault();\n    const checkName = persons.map(p => p.name.indexOf(newName) === -1);\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n      id: persons.length + 1\n    };\n\n    if (checkName.indexOf(false) === -1) {\n      personService.create(newPerson).then(response => {\n        setPersons(persons.concat(response.data));\n        setNewName('');\n        setNumber('');\n        setSuccess(\"Added \".concat(newName));\n        setTimeout(() => {\n          setSuccess(null);\n        }, 5000);\n      }).catch(error => {\n        const err = JSON.stringify(error.response.data.error);\n        setError(err);\n        setTimeout(() => {\n          setError(null);\n        }, 5000);\n      });\n    } else if (newName === '') {\n      setError('Name field is missing');\n      setTimeout(() => {\n        setError(null);\n      }, 5000);\n    } else {\n      if (window.confirm(\"\".concat(newName, \" is already added to phonebook,\\n            replace the old number with a new one?\"))) {\n        const index = checkName.indexOf(false);\n\n        const changedPerson = _objectSpread({}, persons[index], {\n          number: newNumber\n        });\n\n        personService.update(persons[index].id, changedPerson).then(response => {\n          setPersons(persons, window.location.reload());\n        }).catch(error => {\n          setError(\"Information of \".concat(newName, \" has already been removed from the server\"));\n          setTimeout(() => {\n            setError(null);\n          }, 5000);\n        });\n      } else {\n        window.open(\"exit.html\", \"Thanks for Visiting!\");\n      }\n    }\n  };\n\n  const deletePerson = (id, name) => {\n    if (window.confirm(\"delete \".concat(name, \" ?\"))) {\n      personService.del(id).then(response => {\n        const del = persons.filter(p => p.id !== id);\n        setPersons(del);\n      });\n    } else {\n      window.open(\"exit.html\", \"Thanks for Visiting!\");\n    }\n  };\n\n  const handleNameInput = event => {\n    setNewName(event.target.value);\n  };\n\n  const handlePhoneNumberInput = event => {\n    setNumber(event.target.value);\n  };\n\n  const handlerFilterInput = event => {\n    setFilter(event.target.value);\n  };\n\n  const filteredContacts = persons.filter(contact => contact.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Phonebook\"), React.createElement(Success, {\n    message: success,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(Error, {\n    message: error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(Filter, {\n    value: filter,\n    handleFilterChange: handlerFilterInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"add a new\"), React.createElement(PersonForm, {\n    submit: addPerson,\n    nameValue: newName,\n    handleNameChange: handleNameInput,\n    phoneNumberValue: newNumber,\n    handlePhoneNumberChange: handlePhoneNumberInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Numbers\"), React.createElement(Persons, {\n    persons: filteredContacts,\n    deletePerson: deletePerson,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/giang/phonebook-app/frontend/src/App.js"],"names":["React","useEffect","useState","Filter","PersonForm","Persons","personService","Success","Error","App","persons","setPersons","newName","setNewName","newNumber","setNumber","filter","setFilter","success","setSuccess","error","setError","getAll","then","response","data","addPerson","event","preventDefault","checkName","map","p","name","indexOf","newPerson","number","id","length","create","concat","setTimeout","catch","err","JSON","stringify","window","confirm","index","changedPerson","update","location","reload","open","deletePerson","del","handleNameInput","target","value","handlePhoneNumberInput","handlerFilterInput","filteredContacts","contact","toLowerCase"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport personService from \"./service/persons\";\nimport Success from \"./components/Success\";\nimport Error from \"./components/Error\"\n\nconst App = () => {\n    const [ persons, setPersons] = useState([])\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNumber ] = useState('')\n    const [ filter, setFilter ] = useState('')\n    const [ success, setSuccess ] = useState(null)\n    const [ error, setError ] = useState(null)\n\n    useEffect(()=> {\n        personService\n          .getAll()\n          .then(response => {setPersons(response.data)})\n    }, [])\n\n    const addPerson = (event) => {\n        event.preventDefault()\n        const checkName=persons.map(p => p.name.indexOf(newName) === -1)\n        const newPerson={\n            name:newName,\n            number:newNumber,\n            id:persons.length+1,\n        }\n\n        if(checkName.indexOf(false) === -1) {\n            personService\n                .create(newPerson)\n                .then(response => {\n                    setPersons(persons.concat(response.data))\n                    setNewName('')\n                    setNumber('')\n                    setSuccess(`Added ${newName}`)\n                    setTimeout(() => {\n                        setSuccess(null)\n                      }, 5000)\n            })\n                .catch(error => {\n                    const err = JSON.stringify(error.response.data.error)\n                    setError(err)\n                    setTimeout(() => {\n                        setError(null)\n                    }, 5000)\n                })\n        } else if (newName === '') {\n            setError('Name field is missing')\n            setTimeout(() => {\n                setError(null)\n            }, 5000)\n        } else {\n            if (window.confirm(`${newName} is already added to phonebook,\n            replace the old number with a new one?`)) {\n                const index=checkName.indexOf(false)\n                const changedPerson = {...persons[index], number: newNumber }\n                personService\n                    .update(persons[index].id, changedPerson)\n                    .then(response => {\n                        setPersons((persons), window.location.reload()) \n                    })\n                    .catch(error => {\n                        setError(`Information of ${newName} has already been removed from the server`)\n                        setTimeout(() => {\n                            setError(null)\n                        }, 5000)\n                    })\n            } else {\n                window.open(\"exit.html\", \"Thanks for Visiting!\")\n            }\n        }\n    } \n\n    const deletePerson = (id, name) => {\n        if (window.confirm(`delete ${name} ?`)) { \n            personService.del(id)\n            .then(response => {\n                const del = persons.filter(p => p.id !== id)\n                setPersons(del)               \n        })\n        } else {\n            window.open(\"exit.html\", \"Thanks for Visiting!\");\n        } \n    }\n\n    const handleNameInput = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handlePhoneNumberInput = (event) => {\n        setNumber(event.target.value)\n    }\n\n    const handlerFilterInput = (event) => {\n        setFilter(event.target.value) \n    }\n\n    const filteredContacts = persons.filter(contact=>\n        contact.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1)\n  \n    return (\n    <div>\n        <h2>Phonebook</h2>\n            <Success message={success}/>\n            <Error message={error}/>\n            <Filter \n                value={filter}\n                handleFilterChange={handlerFilterInput}\n            />    \n        <h3>add a new</h3>\n            <PersonForm \n                submit={addPerson}\n                nameValue={newName}\n                handleNameChange={handleNameInput}\n                phoneNumberValue={newNumber}\n                handlePhoneNumberChange={handlePhoneNumberInput}\n            />\n    \n        <h3>Numbers</h3>\n            <Persons \n                persons={filteredContacts}\n                deletePerson={deletePerson}\n            />\n    </div>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}